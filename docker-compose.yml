version: '3'

services:
  hugo:
    image: klakegg/hugo:0.101.0-ext-alpine
    container_name: hugo
    command: server --bind "0.0.0.0"
    volumes:
      - "./hugo:/src"
    ports:
      - "1313:1313"
    networks:
    - my_network  

  proxy:
    restart: on-failure
    container_name: proxy
    build: ./proxy
    volumes:
      - "./hugo/content:/app/static"      
    ports:
      - "8080:8080"  
    env_file:
      - ./proxy/.env  
    depends_on:
      - geo
      - user
      - auth
    networks:
      - my_network  

  geo:
    restart: on-failure
    container_name: geo
    build: ./geo
    env_file:
      - ./geo/.env
    depends_on:
      - db_geo
      - redis    
    networks:
      - my_network 

  user:
    restart: on-failure
    container_name: user
    build: ./user
    env_file:
    - ./user/.env
    depends_on:
      - db_users
    networks:
      - my_network

  auth:
    restart: on-failure
    container_name: auth
    build: ./auth
    env_file:
      - ./auth/.env
    depends_on:
      - user
    networks:
      - my_network              

  db_geo:
    image: postgres
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}    
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_GEO_NAME}
    env_file:
      - ./geo/.env
    ports:
      - "5432:5432"   
    networks:
    - my_network 

  db_users:
    image: postgres
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}    
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_USERS_NAME}
    env_file:
      - ./user/.env
    ports:
      - "5433:5432"   
    networks:
    - my_network   
  
  migrator_geo:
    image: migrate/migrate
    volumes:
    - ./geo/migrations:/migrations
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "postgresql://${DB_USER}:${DB_PASSWORD}@${DB_GEO_HOST}:${DB_PORT}/${DB_GEO_NAME}?sslmode=disable",
      ]    
    env_file:
      - ./geo/.env
    command: ["up"]    
    depends_on:
        - db_geo
    restart: on-failure
    networks:
    - my_network

  migrator_users:
    image: migrate/migrate
    volumes:
    - ./user/migrations:/migrations
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "postgresql://${DB_USER}:${DB_PASSWORD}@${DB_USERS_HOST}:${DB_PORT}/${DB_USERS_NAME}?sslmode=disable",
      ]    
    env_file:
      - ./user/.env
    command: ["up"]    
    depends_on:
        - db_users
    restart: on-failure
    networks:
    - my_network

  redis:
    image: redis
    container_name: redis
    hostname: redis
    ports:
      - "6379:6379"    
    networks:
    - my_network    

networks:
  my_network:
    driver: bridge